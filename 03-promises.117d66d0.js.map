{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAwDgC,SAAvBC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EAEFI,EAAQ,CAAEN,WAAUC,UAIpBM,EAAO,CAAEP,WAAUC,S,GAGpBA,E,eA3DMQ,SAASC,cAAc,QAE/BC,iBAAiB,UAEtB,SAA2BC,GACzBA,EAAMC,iBAE2B,IAEVC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAE3BC,QAAQC,IAAIJ,EAAMK,OAGlB,IAD2C,IAAvCC,GAASN,EAAMK,MACVE,EAAI,EAAGA,GAAKL,EAAOG,MAAOE,IACvB,IAANA,GAeFD,IAAUL,EAAKI,MAEjBvB,EAAcyB,EAAGD,GACdE,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjD8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOI,QACd,sBAAuCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,MAxBjDsB,GAASN,EAAMK,MACfvB,EAAcyB,EAAGD,GACdE,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjD8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOI,QACd,sBAAuCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,KAmBvDmB,QAAQC,IAAIE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/build/notiflix-notify-aio';\n\n// КРОКИ\n\n// 1.ВИТЯГНУТИ ЗНАЧЕННЯ ІНПУТІВ ДОСТУКУЄМОСЬ ДО ФОРМИ\n// 2. НА ФОРМУ СТВОРИТИ ОПЕРАТОРА З ПОДІЄЮ САБМІТ ЯКИЙ МАЄ ФУНКЦІЮ СТВОРИТИ ПРОМІСИ(СМС)\n// 3.В  ПРОМІСІ ПРОПИСАТИ AMOUNT - К-СТЬ ПРОМІСІВ ЯКІ МАЮТЬ СТВОРИТИСЬ\n// 4. В ДЕЛАЙ - ЗАПИСУЄМО ЧАС ІЗ ЗАТРИМКОЮ СТВОРЕННЯ ПРОМІСІВ\n\nconst form = document.querySelector('form');\n\nform.addEventListener('submit', hendleClickSubmit);\n// form.addEventListener('input', hendleInputDate);\nfunction hendleClickSubmit(event) {\n  event.preventDefault();\n  //  достукалась до значення інпутів форми\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  console.log(delay.value);\n  //   проходимо цикл додаємо на кожному проміс час кроку\n  let timer = +delay.value;\n  for (let i = 1; i <= amount.value; i++) {\n    if (i === 1) {\n      timer = +delay.value;\n      createPromise(i, timer)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n      continue;\n    } else {\n      timer += +step.value;\n    }\n    createPromise(i, timer)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  console.log(timer);\n}\n// функція створення промісів рандомно\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n        // Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject({ position, delay });\n        // Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","console","log","value","timer","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.117d66d0.js.map"}